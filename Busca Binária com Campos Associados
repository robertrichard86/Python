import time

L = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
Letras = ["A", "B", "C", "D", "F", "G", "H", "I", "J", "K", "L"]
n = len(L)

print("Dimensão da lista L = ", n)

def busca_binaria_campos(x):
    posicao_inferior = 0
    posicao_superior = n - 1

    while posicao_inferior <= posicao_superior:
        meio = (posicao_inferior + posicao_superior) // 2
        if L[meio] == x:
            return L[meio], Letras[meio]
        elif L[meio] < x:
            posicao_inferior = meio + 1
        else:
            posicao_superior = meio - 1
    return None

tempo_inicial = time.time()

print("Chave (5), campo da chave = ", busca_binaria_campos(5))
print("Chave (1), campo da chave = ", busca_binaria_campos(1))
print("Chave (4), campo da chave = ", busca_binaria_campos(4))
print("Chave (3), campo da chave = ", busca_binaria_campos(3))
print("Chave (2), campo da chave = ", busca_binaria_campos(2))
print("Chave (0), campo da chave = ", busca_binaria_campos(0))
print("Chave (6), campo da chave = ", busca_binaria_campos(6))
print("Chave (7), campo da chave = ", busca_binaria_campos(7))
print("Chave (10), campo da chave = ", busca_binaria_campos(10))
print("Chave (9), campo da chave = ", busca_binaria_campos(9))
print("Chave (8), campo da chave = ", busca_binaria_campos(8))
print("Chave (20), campo da chave = ", busca_binaria_campos(20))

tempo_final = time.time()

print("Tempo de execução = ", tempo_final - tempo_inicial)
